# ref:
# - https://docs.sonarcloud.io/advanced-setup/ci-based-analysis/github-actions-for-sonarcloud/
# - https://sonarcloud.io/project/configuration?id=gianfa_test-sonarcloud&analysisMode=GitHubActions
# - [SonarCluoud Pylint](https://stackoverflow.com/questions/66367465/sonarqube-ignores-pylint-results)
#
# 1. Sonar: connect github repo
# 2. Sonar: Add a new project: gh repo
# 3. Sonar: Get organization key (administration) and project key (id)
# 4. Sonar: Account > Security > Generate new token
# 5. GH: add the new token, as SONAR_TOKEN

name: Python Code Analysis
on:
  push:
    branches:
      - '*'

jobs:
  debug_init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: pwd
        run: pwd
      - name: ls
        run: echo $(ls .)
      - name: tree
        run: echo "$(tree .)"

  code-analysis:
    runs-on: ubuntu-latest
    container:
      image: python:3.8-slim-buster
      # volumes:
      #   - ./:/app
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # - name: Install dependencies
      #   run: pip install -r pyproject.toml
      # - name: Run Pylint analysis
      #   run: |
      #     pylint --output-format=json --reports=y /app > pylint-report.json
      # https://github.com/SonarSource/sonarcloud-github-action
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SONAR_TOKEN: ${{ secrets.GLOBAL__TEST__SONAR_TOKEN }}
  
      - name: Check SonarCloud Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s \
            -u "${{ secrets.SONAR_TOKEN }}:" \
            -X GET "https://sonarcloud.io/api/qualitygates/project_status?projectKey=gianfa_test-sonarcloud" \
            -o sonar_status.json

          status=$(jq -r '.projectStatus.status' sonar_status.json)
          if [[ "$status" != "OK" ]]; then
            echo "ERR: SonarCloud Quality Gate failed. Status: $status"
            exit 1
          fi
